plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'java'


group = 'ru.corruptzero'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(11))
	}
}
jar {
	duplicatesStrategy "exclude"
	manifest {
		attributes(
				'Main-Class': 'ru.corruptzero.lynkhidr.LinkHydrApplication'
		)
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

task stage(type: Copy, dependsOn: [clean, build]) {
	doFirst {
		from jar
		into project.rootDir
		rename {
			'uber.jar'
		}
	}
}

stage.mustRunAfter(clean)

clean {
	doLast {
		project.file('uber.jar').delete()
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url 'https://jitpack.io' }
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core:4.17.2'
	implementation 'org.hashids:hashids:1.0.3'
	compileOnly 'org.hashids:hashids:1.0.3'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}
